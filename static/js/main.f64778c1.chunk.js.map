{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorNextLevel.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.css","p2-homeworks/h2/Affairs.module.css"],"names":["module","exports","Message","props","className","style","message","img","src","avatar","alt","name","textBody","text","date","time","left","SuperButton","red","restProps","finalClassName","s","default","messages","HW1","useState","value","setValue","map","el","id","createMessage","trim","push","Math","random","Date","toLocaleString","content","onChange","e","target","onKeyPress","shiftKey","key","preventDefault","text_area_hw","placeholder","onClick","Affair","content_name","affair","toUpperCase","content_priority","priority","color","content_action","_id","deleteAffairCallback","Affairs","mappedAffairs","data","a","styles","mainContent","mainContent_affairs","mainContent_buttons","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChangeText","onEnter","error","textValue","label","spanClassName","finalInputClassName","errorInput","superInput","currentTarget","Greeting","setNameCallback","addUser","totalUsers","onPressHandler","disabled","input","addButton","userCount","GreetingContainer","users","addUserCallback","setName","setError","alert","length","evt","HW3","setUsers","console","log","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","onDoubleClick","restSpanProps","editMode","isEditMode","setErrorHandler","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setEditMode","useEffect","err","undefined","PreJunior","Error404","Junior","JuniorNextLevel","PATH","Routes","path","exact","render","to","Header","setStyle","bread_crumbs","onMouseLeave","bread_crumbs__box","bread_crumbs_hoveredEl","hovered","b_menu","link","activeClassName","activeLink","HW5","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f64778c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3xtAW\",\"avatar\":\"Message_avatar__2oU84\",\"name\":\"Message_name__2VxhR\",\"textBody\":\"Message_textBody__dAvHy\",\"date\":\"Message_date__2b6j1\",\"text\":\"Message_text__6Jgc0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__377yP\",\"errorInput\":\"SuperInputText_errorInput__jPSYc\",\"label\":\"SuperInputText_label__2X4h4\",\"error\":\"SuperInputText_error__3Znjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1aoP9\",\"text_area_hw\":\"App_text_area_hw__2CrxC\",\"content\":\"App_content__1cr23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Greeting_content__VBzE_\",\"input\":\"Greeting_input__s6YOd\",\"addButton\":\"Greeting_addButton__37Z1P\",\"userCount\":\"Greeting_userCount__2pVHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__HJxgh\",\"red\":\"SuperButton_red__15AQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3o4dm\",\"spanClassName\":\"SuperCheckbox_spanClassName__1CEpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1PinI\",\"column\":\"HW4_column__3EMHs\",\"testSpanError\":\"HW4_testSpanError__3gpa5\"};","import React from \"react\"\nimport style from \"./Message.module.css\"\nimport {MessageType} from \"./HW1\"\n\nexport const Message: React.FC<MessageType> = (props) => {\n    return (\n        <div>\n            <div className={style.message}>\n                <div className={style.img}>\n                    <img src={props.avatar} className={style.avatar} alt={props.name}/>\n                </div>\n                <div className={style.textBody}>\n                    <div className={style.name}>{props.name}</div>\n                    <div className={style.text}>{props.message}</div>\n                    <div className={style.date}>{props.time}</div>\n                    <div className={style.left}></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {useState} from \"react\"\nimport {Message} from \"./Message\"\nimport s from \"./../../p1-main/m1-ui/u1-app/App.module.css\"\nimport Button from \"../h4/common/c2-SuperButton/SuperButton\"\n\nconst messages: MessageType[] = []\nexport type MessageType = {\n    id: number\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nconst HW1: React.FC = () => {\n    const [value, setValue] = useState(\"\")\n    const message = messages.map(el => <Message key={el.id}\n                                                message={el.message}\n                                                id={el.id}\n                                                avatar={el.avatar}\n                                                name={el.name}\n                                                time={el.time}/>)\n    const createMessage = () => {\n        if (!value.trim()) {\n            return\n        }\n        messages.push({\n            name: \"NIK\",\n            id: Math.random(),\n            message: value,\n            time: new Date().toLocaleString(),\n            avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\"\n        })\n        setValue(\"\")\n    }\n\n    const addMessage = (e: React.KeyboardEvent): void => {\n        if (e.shiftKey && e.key === \"Enter\") {\n            e.preventDefault()\n            createMessage()\n        }\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            <div>\n                {message}\n            </div>\n            <div className={s.content}>\n                <textarea value={value}\n                          onChange={(e) => setValue(e.target.value)}\n                          onKeyPress={addMessage}\n                          className={s.text_area_hw}\n                          placeholder={\"tap a some text and press Shift+Enter or send to view the result\"}/>\n                <div>\n                    <Button onClick={createMessage}>send</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from \"react\"\r\nimport {AffairType} from \"./HW2\"\r\nimport style from \"./Affairs.module.css\"\r\nimport Button from \"../h4/common/c2-SuperButton/SuperButton\"\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = (_id: number) => {\r\n        props.deleteAffairCallback(_id)\r\n    }\r\n\r\n    const chooseColor = () => {\r\n        if (props.affair.priority === \"middle\") {\r\n            return {color: \"yellow\"}\r\n        }\r\n        if (props.affair.priority === \"high\") {\r\n            return {color: \"red\"}\r\n        }\r\n        if (props.affair.priority === \"low\") {\r\n            return {color: \"gray\"}\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.content_name}>\r\n                {props.affair.name.toUpperCase()}\r\n            </div>\r\n            <div className={`${style.content_priority} `} style={chooseColor()}>\r\n                [{props.affair.priority}]\r\n            </div>\r\n            <div className={style.content_action}>\r\n                <Button onClick={() => deleteCallback(props.affair._id)}>X</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from \"./HW2\"\nimport styles from \"./Affairs.module.css\"\nimport Button from \"../h4/common/c2-SuperButton/SuperButton\"\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter: FilterType)=>void\n    deleteAffairCallback: (_id: number)=> void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    return (\n        <div className={styles.mainContent}>\n            <div className={styles.mainContent_affairs}>\n                {mappedAffairs}\n            </div>\n            <div className={styles.mainContent_buttons}>\n                <Button onClick={()=>props.setFilter(\"all\")}>All</Button>\n                <Button onClick={()=>props.setFilter(\"high\")}>High</Button>\n                <Button onClick={()=>props.setFilter(\"middle\")}>Middle</Button>\n                <Button onClick={()=>props.setFilter(\"low\")}>Low</Button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from \"react\"\r\nimport Affairs from \"./Affairs\"\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\"| \"low\"| \"middle\"\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: FilterType\r\n}\r\nexport type FilterType = \"all\" | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if (filter === \"all\") return affairs\r\n    if(filter === \"high\") return affairs.filter(a=>a.priority === \"high\")\r\n    if(filter === \"low\") return affairs.filter(a=>a.priority === \"low\")\r\n    else return affairs.filter(a=>a.priority === \"middle\")\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => affairs.filter(a=>a._id !== _id)\r\n\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>(\"all\")\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\"\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    textValue?: string\r\n    label?: string\r\n}\r\n\r\n const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,textValue, label,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalInputClassName = `${error && !textValue? s.errorInput:s.superInput} ${s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n            <label>\r\n                <div className={s.label}>{label}</div>\r\n                <input\r\n                    type={'text'}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n                {error && <span className={s.error}>{error}</span>}\r\n            </label>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, KeyboardEvent} from \"react\"\nimport s from \"./Greeting.module.css\"\nimport Input from \"../h4/common/c1-SuperInputText/SuperInputText\"\nimport Button from \"../h4/common/c2-SuperButton/SuperButton\"\n\ntype GreetingPropsType = {\n    disabled: boolean\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    onPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onPressHandler, disabled} // деструктуризация пропсов\n) => {\n\n\n    return (\n        <div className={s.content}>\n            <Input value={name}\n                   error={error}\n                   onChange={setNameCallback}\n                   onKeyPress={onPressHandler}\n                   label={\"enter your name\"}\n                   className={s.input}/>\n            <Button onClick={addUser} disabled={disabled} className={s.addButton}>ADD</Button>\n            <span className={s.userCount}>{totalUsers}</span>\n            {/*  {!!error && <div className={s.errorText}>{error}</div>}*/}\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from \"react\"\r\nimport Greeting from \"./Greeting\"\r\nimport {UserType} from \"./HW3\"\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n\r\n  /*  useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => setError(\"\"), 5000)\r\n        }\r\n    }, [error])*/\r\n\r\n    /*  const deleteError = () => {\r\n          setTimeout(() => setError(\"\"), 3000)\r\n      }*/\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let evt = e.currentTarget.value.trim()\r\n        if ( evt.length < 1) {\r\n             setError(\"name is required\")\r\n            //deleteError()\r\n        }\r\n        if ( evt.length === 15){\r\n            setError(\"max 15 symbols\")\r\n            return\r\n        }\r\n        setName(evt)\r\n\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        setError(\"\")\r\n        alert(`Hello ${name} !`)\r\n        setName(\"\")\r\n    }\r\n\r\n    const onPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\" && e.currentTarget.value.length === 0) {\r\n            setError(\"name is required\")\r\n            return\r\n            //deleteError()\r\n        }\r\n        if (e.key === \" \") {\r\n            setError(\"Name mast be without space\")\r\n        }\r\n\r\n        if (e.key === \"Enter\") {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            disabled={name.length === 0}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            onPressHandler={onPressHandler}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from \"react\"\nimport GreetingContainer from \"./GreetingContainer\"\nimport {v1} from \"uuid\"\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([])\n    console.log(users)\n    const addUserCallback = (name: string) => {\n        setUsers((users) => [...users, {_id: v1(), name}])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       onChange && onChange(e)\n       onChangeChecked && onChangeChecked(e.currentTarget.checked)\n       // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useEffect, useState} from \"react\"\r\nimport Input from \"./common/c1-SuperInputText/SuperInputText\"\r\nimport s from \"./HW4.module.css\"\r\nimport Button from \"./common/c2-SuperButton/SuperButton\"\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\"\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n\r\n  /*  useEffect(() => {\r\n        setTimeout(() => setError(\"\"), 10000)\r\n    }, [error])\r\n*/\r\n    const showAlert = () => {\r\n        let trim = text.trim()\r\n        if (!trim) {\r\n            setError(\"error\")\r\n            alert(\"введите текст...\")\r\n        }\r\n        if (trim) {\r\n            setText(\"\")\r\n            setError(\"\")\r\n            alert(trim) // если нет ошибки показать текст\r\n        }\r\n    }\r\n    const deleteButton = () => {\r\n        setText(\"\")\r\n    }\r\n    const defaultButton = () => {\r\n        setText(\"Name+LastName+FamilyName\")\r\n    }\r\n\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <Input\r\n                    label={\"name\"}\r\n                    textValue={text}\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <Input\r\n                    /* label={\"name\"}\r\n                     textValue={text}\r\n                     value={text}\r\n                     onChangeText={setText}\r\n                     onEnter={showAlert}\r\n                     error={error}*/\r\n                    //для того чтобы были разные данные в обоих инпутах, нужно создавать отдельный стейт здесь,\r\n                    //или перенести стейт внутрь компоненты\r\n                    //className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <Button onClick={defaultButton}>\r\n                    default\r\n                </Button>\r\n\r\n                <Button\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={deleteButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </Button>\r\n\r\n                <Button disabled>\r\n                    disabled\r\n                </Button>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\"\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    label?: string\r\n    setErrorHandler: (err: string) => void\r\n    isEditMode:()=>void\r\n    editMode: boolean\r\n    value: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps, value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        if (!value) {\r\n            restProps.setErrorHandler(\"error: please tap something\")\r\n            return\r\n        }\r\n\r\n        restProps.isEditMode()// выключить editMode при нажатии Enter\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        if (!value) {\r\n            restProps.setErrorHandler(\"error: please tap something\")\r\n            return\r\n        }\r\n\r\n        restProps.isEditMode() // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        restProps.isEditMode() // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {restProps.editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        error={restProps.error}\r\n                        label={restProps.label}\r\n                        textValue={value}\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useEffect, useState} from \"react\"\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\"\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\"\nimport {restoreState, saveState} from \"./localStorage/localStorage\"\n\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\")\n    const [error, setError] = useState(\"\")\n    const [editMode, setEditMode] = useState<boolean>(false)\n\nuseEffect(()=>{\n    if (value.length === 0) {\n        setError(\"error: field can't be empty\")\n    }\n    if (value) {\n        setError(\"\")\n    }\n\n}, [value])\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value)\n    }\n    const restore = () => {\n        setValue(() => restoreState<string>(\"editable-span-value\", value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    label={\"Enter Text\"}\n                    setErrorHandler={(err:string)=>setError(err)}\n                    isEditMode={()=>setEditMode(!editMode)}\n                    editMode={editMode}\n                    error={error}\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save} disabled={!value}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from \"react\"\nimport HW1 from \"../../h1/HW1\"\nimport HW2 from \"../../h2/HW2\"\nimport HW3 from \"../../h3/HW3\"\nimport HW4 from \"../../h4/HW4\"\nimport HW6 from \"../../h6/HW6\"\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from \"react\"\n\nexport function Junior() {\n    return (\n        <div>\n            JUNIOR\n        </div>\n    )\n}\n\n\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\"\n\nexport function JuniorNextLevel() {\n    return (\n        <div>\n            JuniorNextLevel\n        </div>\n    )\n}\n\n\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\"\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport PreJunior from \"./pages/PreJunior\"\nimport Error404 from \"./pages/Error404\"\nimport {Junior} from \"./pages/Junior\"\nimport {JuniorNextLevel} from \"./pages/JuniorNextLevel\"\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_NEXT_LEVEL: \"/juniorNL\"\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_NEXT_LEVEL} render={() => <JuniorNextLevel/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React, {useState} from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport {PATH} from \"./Routes\"\nimport styles from \"./Header.module.css\"\n\nfunction Header() {\n    const [style, setStyle] = useState(false)\n\n    const openMenuStyle = () => {\n        if (style) {\n            return styles.bread_crumbs__box\n        }\n        if (!style) {\n            return styles.bread_crumbs_hoveredEl\n        }\n    }\n\n    return (\n        <div className={styles.bread_crumbs} onMouseLeave={()=>setStyle(!style)}>\n            <div className={openMenuStyle()}>\n                <div className={styles.hovered}></div>\n                <div className={styles.b_menu}>\n                    <NavLink className={styles.link}\n                             activeClassName={styles.activeLink}\n                             to={PATH.PRE_JUNIOR}>\n                        pre\n                    </NavLink>\n                    <NavLink className={styles.link}\n                             activeClassName={styles.activeLink}\n                             to={PATH.JUNIOR}>\n                        jun\n                    </NavLink>\n                    <NavLink className={styles.link}\n                             activeClassName={styles.activeLink}\n                             to={PATH.JUNIOR_NEXT_LEVEL}>\n                        junNL\n                    </NavLink>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from \"react\"\nimport Header from \"./Header\"\nimport Routes from \"./Routes\"\nimport {HashRouter} from \"react-router-dom\"\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from \"react\"\r\nimport s from \"./App.module.css\"\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\"\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./p1-main/m1-ui/u1-app/App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bread-crumbs\":\"Header_bread-crumbs__1CtzD\",\"bread_crumbs__box\":\"Header_bread_crumbs__box__16MvW\",\"bread_crumbs_hoveredEl\":\"Header_bread_crumbs_hoveredEl__1Xbso\",\"menu-opener\":\"Header_menu-opener__h6Fgu\",\"b-menu\":\"Header_b-menu__3zKoL\",\"link\":\"Header_link__3lTgv\",\"activeLink\":\"Header_activeLink__34JxC\",\"hovered\":\"Header_hovered__F2GkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Affairs_mainContent__VgIDF\",\"mainContent_affairs\":\"Affairs_mainContent_affairs__WFvsr\",\"mainContent_buttons\":\"Affairs_mainContent_buttons__2YfPs\",\"content\":\"Affairs_content__1J1uJ\",\"content_name\":\"Affairs_content_name__1olBF\",\"content_priority\":\"Affairs_content_priority__2nJeB\",\"content_action\":\"Affairs_content_action__2Odha\"};"],"sourceRoot":""}